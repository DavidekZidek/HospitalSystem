// <auto-generated />
using System;
using HospitalSystem.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalSystem.Infrastructure.Migrations
{
    [DbContext(typeof(HospitalSystemDbContext))]
    partial class HospitalSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HospitalSystem.Domain.Entities.BloodTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HealthActionId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureNotes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HealthActionId");

                    b.ToTable("BloodTest");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.HealthAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.ToTable("HealthAction");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.HealthExamination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HealthActionId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("Results")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HealthActionId");

                    b.ToTable("HealthExamination");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BirthNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HealthInsurance")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ID_UserAccount")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Results", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ID_Registration")
                        .HasColumnType("int");

                    b.Property<int>("ID_Results")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<string>("ResultsDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PersonalID")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Vaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HealthActionId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("SideEffects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VaccinationType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HealthActionId");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.BloodTest", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.HealthAction", "HealthAction")
                        .WithMany("BloodTests")
                        .HasForeignKey("HealthActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAction");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.Person", "Person")
                        .WithOne("Doctor")
                        .HasForeignKey("HospitalSystem.Domain.Entities.Doctor", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.HealthAction", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.Registration", "Registration")
                        .WithMany("HealthActions")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.HealthExamination", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.HealthAction", "HealthAction")
                        .WithMany("HealthExaminations")
                        .HasForeignKey("HealthActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAction");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Patient", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.Person", "Person")
                        .WithOne("Patient")
                        .HasForeignKey("HospitalSystem.Domain.Entities.Patient", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Registration", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.UserAccount", "UserAccount")
                        .WithMany("Registrations")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Results", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.Registration", "Registration")
                        .WithMany("Results")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.UserAccount", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.Role", "Role")
                        .WithMany("UserAccounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Vaccination", b =>
                {
                    b.HasOne("HospitalSystem.Domain.Entities.HealthAction", "HealthAction")
                        .WithMany("Vaccinations")
                        .HasForeignKey("HealthActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAction");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.HealthAction", b =>
                {
                    b.Navigation("BloodTests");

                    b.Navigation("HealthExaminations");

                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Person", b =>
                {
                    b.Navigation("Doctor")
                        .IsRequired();

                    b.Navigation("Patient")
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Registration", b =>
                {
                    b.Navigation("HealthActions");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("HospitalSystem.Domain.Entities.UserAccount", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
